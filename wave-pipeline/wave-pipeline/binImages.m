%%% SCRIPT TO BIN IMAGES.
% doYouWantTobinImages = 'No'; % 'No' is the alternative variable. 
% scalingFactor = 0.25; % A scaling factor of 0.5 is the equivant of binnning 2 by 2. 

function folder_well = binImages(folder_well, doYouWantTobinImages, scalingFactor)

switch doYouWantTobinImages
    
    case 'No' 
        
        disp('You have chosen not to re-scale (bin) your images');
        
    case 'Yes' 

        disp('Re-scaling (binning) your images');
        
        %% Load up all the images in the folder. 

        % any funny single character names (e.g. '.') which I've seen appear.
        folder_well = cell2mat(folder_well);
        allFiles = dir(folder_well);
        allNames = {allFiles.name};
        numberOfImages = size(allNames);
        numberOfImages = numberOfImages(2);
        nameLength =  cellfun('length',allNames);
        logicalRepresentation = nameLength > 60;

        % Here are the correct names, generated by the process above. 
        correctNames = allNames(logicalRepresentation);
        numberOfCorrectNames = numel(correctNames);
        
        %% Loop through all the images, resize them and save them. 
        
        for t=1:numberOfCorrectNames
            
            if rem(t,10) == 0
            s1 = 'progress_t___ReScaling images ='; 
            value = num2str((t/numberOfCorrectNames)*100);
            message = cell2mat(strcat(s1,{' '}, value));
            disp(message);
            end 
            
            cd (folder_well)
            
            unscaledImage = imread(correctNames{t}); % Load in the unsclaed image. 
            
            scaledImage = imresize(unscaledImage, scalingFactor, 'bilinear'); % Scale the image. 
            
            s1 = folder_well;
            s2 = '\';
            s3 = 'ReScaled';
            RESCALEDdir = strcat(s1, s2, s3); % Construct the current directory that we want.
            if ~exist(RESCALEDdir, 'dir') % If the directory doesn't exist, then create it. 
                cd (folder_well)
                mkdir(RESCALEDdir)
            end
            
           cd (RESCALEDdir)
           imwrite(scaledImage, correctNames{t}, 'Compression', 'none');
            
        end 
        
        folder_well = {RESCALEDdir};
        
end 

disp('ReScaling complete');

end 